SERVER SE POKRECE SA: 'node /.../api.js' (... je relativna putanja do fajla iz pozicije u konzoli)
    pokrece se na portu 3000

GET requests:
    /cities/:id - returns the json metadata about the NFT
    /cities/:id/image.jpg - returns the image of the NFT
    /cities/:id/data - returns the data about the city from the smart contract
    /leaderboard - returns the list of cities sorted by score
    /count - returns the number of NFTs
    /cities/:id/getincome - the id-th city receives the ingame income - could also be a get request
    /cities/:id/achievements - returns a list of data about all the achievements { 'count' - number of people who completed the achievement, 'completed' - true if the id-th city completed it and false if not }

POST requests:
    (*) /cities/:id/initialize - { signature: '0x...', message: 'example - Initialize #555 City NFT' }
    (*) /cities/:id/build - { 
            building: { start: {x: ..., y: ...}, end: {x: ..., y: ...}, orientation: r, type: "type", level: 0 } 
        }, 1≤r≤4
    (*) /cities/:id/buildspecial - { 
            building: { start: {x: ..., y: ...}, end: {x: ..., y: ...}, orientation: x, type: "type" },
            throughOffer: true/false,
        }
    (*) /cities/:id/upgrade - {
            building: {
                start: {x: ..., y: ...},
                end: {x: ..., y: ...},
                type: "type",
                orientation: x,
                level: 'l',
                id: 'buildingId',
            }
        }
    (*) /cities/:id/rotate - { 
            rotation: r, // new rotation of the building, 1≤r≤4
            building: { ... } // building object like for all other endpoints
        }
    (*) /cities/:id/rotatespecial - { 
            rotation: r, // new rotation of the building, 1≤r≤4
            building: { ... } // building object like for all other endpoints
        }
    (*) /cities/:id/remove - {
            building: { 
                start: {x: ..., y: ...}, 
                end: {x: ..., y: ...}, 
                orientation: x, 
                type: "type", 
                level: 'l', 
                id: 'buildingId' 
            }
        }
    (*) /cities/:id/removespecial - {
            building: { 
                start: {x: ..., y: ...}, 
                end: {x: ..., y: ...}, 
                orientation: x, 
                type: "type", 
                id: 'buildingId' 
            },
            throughOffer: true/false,
            expectedValue: number, // int, the expected price for selling the special building (if not met, the action will fail)
        }
    (*) /cities/:id/specialoffer - {
            value: Number, // offer value
            type: String // the special building type the offer is made for
        }
    (*) /cities/:id/completed - { // does not change the score, should call getincome to set it to the new value
            achievement: 'key'
        }

INSTRUCTION LIST REQUEST:
    (*) /cities/:id/instructions - {
        instructions: [
            {
                instruction: 'key',
                body: {
                    data sent for the instruction
                }
            },
            ...
        ]
    }
    Instruction keys: 'build', 'buildspecial', 'upgrade', 'rotate', 'rotatespecial', 'remove', 'removespecial'

DEV OPTIONS:
    /cities/:id/dev/setmoney - { money: m } // m - unsigned int
    /cities/:id/dev/demolish - City gone, reduced to atoms...   

NAPOMENE:
    1. Medju post requestova treba koristiti samo sledece:
        '/cities/:id/instructions', '/cities/:id/specialoffer' i '/cities/:id/initialize'
        
    2. Kod url-ova sa (*) treba da bude sledeceg oblika: 
        {
            navedeni podaci...,
            signature: '0x... ovo je potpis koji se dobije od korisnika u frontendu',
            message: 'ovo je potpisana poruka'
        }
    - Poruke uvek trebaju da budu drugacije, zato da se ne bi moglo primetiti neko ponavljanje, jer bi onda mogao bilo ko da posalje potpisanu poruku bez da poseduje potreban privatni kljuc.
    - Primeri:
        'upgrade at index 18 in city 555' - 18 je index u nizu gradjevina, a 555 je ID tog grada
        'build 8. house in city 555' - gradi se 8. kuca (vec ih ima 7 u tom gradu)
        (uopste ne mora da bude ovaj format, radice za bilo kakve poruke, samo treba obratiti paznju na to da se poruke ne ponavljaju)

Kako dobiti potpis korisnika (ovo je primer, ne mora da bude TACNO ovako):
    await window.ethereum.send("eth_requestAccounts");
    const provider = new ethers.providers.Web3Provider(window.ethereum);
    const signer = provider.getSigner();
    const signature = await signer.signMessage(message);
    const address = await signer.getAddress();
		- important data from here are the { signer (address), message (string), signature (hex string - 0x...) }
